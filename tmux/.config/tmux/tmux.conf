set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 20000
# set -s set-clipboard on
setw -g mouse on
setw -g monitor-activity on

# new prefix key
unbind C-b
set -g prefix C-s
bind C-s send-prefix
bind s send-prefix

# time delay between prefix and command - server-wide
set -sg escape-time 1

# start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# automatically set window title at creation
set-window-option -g automatic-rename on
set -g automatic-rename-format "#{pane_current_command}"
set-option -g set-titles on
set -g set-titles-string "#W/#I/#T"

# or prompt to rename window after creation
# set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'
# set-hook -g after-new-window 'command-prompt -I "#{pane_title}" "select-pane -T '%%'"'
# set-hook -g after-split-window 'command-prompt -I "#{pane_title}" "select-pane -T '%%'"'

# or explicit window/session/pane renaming
bind C-w command-prompt -I "#{window_name}" "rename-window '%%'"
bind C-s command-prompt -I "#{session_name}" "rename-session '%%'"
bind C-p command-prompt -I "#{pane_title}" "select-pane -T '%%'"

# switch to pane indicated by display-panes
set -g display-panes-time 5000 # pane number visible for 5 secs

# split windows into panes --> side by side
bind-key "|" split-window -hc "#{pane_current_path}"
#bind-key "\\" split-window -fhc "#{pane_current_path}"

# split windows into panes --> top/bottom
bind-key "-" split-window -vc "#{pane_current_path}"
bind-key "_" split-window -fvc "#{pane_current_path}"

# C-l (outside of tmux) usually clears the screen - maintain that behavior while in tmux
bind C-l send-keys 'C-l'

# swap windows consecutively numbered windows
bind -r "<" swap-window -d -t -1
bind -r ">" swap-window -d -t +1

# use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# use ctl-arrow keys without prefix key to switch panes
# bind -n C-Left select-pane -L
# bind -n C-Right select-pane -R
# bind -n C-Up select-pane -U
# bind -n C-Down select-pane -D

# vim style pane selection with prefix
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# vim style pane selection without prefix
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# vim style pane selection without prefix
bind -n C-h select-pane -L
bind -n C-j select-pane -D 
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# shift arrow to switch windows without prefix
bind -n S-Left  previous-window
bind -n S-Right next-window

# resize panes
# don't need if using pain-control plugin
# bind -r C-j resize-pane -D 5
# bind -r C-k resize-pane -U 6
# bind -r C-h resize-pane -L 5
# bind -r C-l resize-pane -R 5

# join a pane horizontally to a given window
bind j choose-window 'join-pane -h -s "%%"'

# join a pane vertically to a given window
bind J choose-window 'join-pane -s "%%"'

# source tmux config file
bind s source-file ~/.config/tmux/tmux.conf\; display "config reloaded !!"

# set vi-mode
set-window-option -g mode-keys vi

# copy and paste keys
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi Y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# some useful tmux commands
#   - prefix + =  ==> choose the paste buffers
#   The following buffer commands take '-b <a_named_buffer':
#       - tmux show-buffer = tmux showb
#       - tmux list-buffers = tmux lsb
#       - tmux set-buffer <some data> = tmux setb <some data>
#       - tmux load-buffer <path> = tmux loadb <path> = load a file into a new buffer
#       - tmux paste-buffer = tmux pasteb = paste most recent buffer into current pane
#               or specify -t <target pane>
#       - tmux save-buffer <path> = tmux saveb <path> = save most recent buffer into a file
#                use '-' to append
#       - tmux delete-buffer = tmux deleteb = deletes most recent buffer
#   In copy mode:
#       - v begins selection
#       - V selects whole line
#       - Y yanks selected stuff
#       - normal vim motions work
# bind -T copy-mode-vi Y send-keys -X copy-line

# experimental
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i"
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

# use with tmux-yank
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'primary'
set -g @yank_action 'copy-pipe'           # stay in copy mode
# set -g @yank_action 'copy-pipe-no-clear'    # stay in copy mode and not clear selection
# set -g @shell-mode 'vi' # needed for tmux < 2.3

# configure some items in resurrect and continuum plugins
# set -g @resurrect-capture-panes-contents 'on'
# set -g @continuum-restore 'on'

# customizations for tmux-menux
set -g @menus_trigger m
set -g @menus_show_key_hints Yes

# list of plugins - method #1 - use one method only
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'noscript/tmux-mighty-scroll'
set -g @plugin 'jaclu/tmux-menus'
set -g @plugin 'sainnhe/tmux-fzf'  # requires copyq
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'christoomey/vim-tmux-navigator'


# method #2 to load plugins - use one method only
# set -g @tpm_plugins '                   \
#     tmux-plugins/tpm                    \
#     tmux-plugins/tmux-sensible          \

# color theme
set -g @catppuccin_flavour 'mocha'
# set -g @catppuccin_flavour 'latte'
# set -g @catppuccin_flavour 'macchiato'

# add pane number to display
set -g @catppuccin_window_current_text "Pane #{pane_index}#{windows_name} #T"
set -g @catppuccin_status_background "default"
set -g @catppuccin_window_status_style "basic"
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"

# configure Online status
set -g @online_icon "ok"
set -g @offline_icon "nok"

# status left look and feel
set -g status-left-length 100
set -g status-left ""
set -ga status-left "#{?client_prefix,#{#[bg=#{@thm_red},fg=#{@thm_bg},bold]  #S },#{#[bg=#{@thm_bg},fg=#{@thm_green}]  #S }}"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
# set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_maroon}]  #{pane_current_command} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_blue}]  #{=/-32/...:#{s|$USER|~|:#{b:pane_current_path}}} "
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]#{?window_zoomed_flag,│,}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_yellow}]#{?window_zoomed_flag,  zoom ,}"

# status right look and feel
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#{?#{e|>=:10,#{battery_percentage}},#{#[bg=#{@thm_red},fg=#{@thm_bg}]},#{#[bg=#{@thm_bg},fg=#{@thm_pink}]}} #{battery_icon} #{battery_percentage} "
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=#{@thm_bg}]#{?#{==:#{online_status},ok},#[fg=#{@thm_mauve}] 󰖩 on ,#[fg=#{@thm_red},bold]#[reverse] 󰖪 off }"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}, none]│"
set -ga status-right "#[bg=#{@thm_bg},fg=#{@thm_maroon}] 󰭦 %Y-%m-%d 󰅐 %H:%M:%S "

set -g status-position top
set -g status-style "bg=#{@thm_bg}"
set -ga status-left "#[bg=#{@thm_bg},fg=#{@thm_overlay_0},none]│"
set -g status-justify "absolute-centre"

# pane border look and feel
setw -g pane-border-status bottom
setw -g pane-border-format "Pane #{pane_index}"
setw -g pane-active-border-style "bg=#{@thm_bg},fg=#{@thm_overlay_0}"
setw -g pane-border-style "bg=#{@thm_bg},fg=#{@thm_surface_0}"
setw -g pane-border-lines double

# window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "#{pane_current_command}"

set -g window-status-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-style "bg=#{@thm_bg},fg=#{@thm_rosewater}"
set -g window-status-last-style "bg=#{@thm_bg},fg=#{@thm_peach}"
set -g window-status-activity-style "bg=#{@thm_red},fg=#{@thm_bg}"
set -g window-status-bell-style "bg=#{@thm_red},fg=#{@thm_bg},bold"
set -gF window-status-separator "#[bg=#{@thm_bg},fg=#{@thm_overlay_0}]│"

set -g window-status-current-format " #I#{?#{!=:#{window_name},Window},: #W,} "
set -g window-status-current-style "bg=#{@thm_peach},fg=#{@thm_bg},bold"

# prefix + I to install
# prefix + u to update
# prefix + alt + u to uninstall
# keep tpm line at end of file
run '~/.tmux/plugins/tpm/tpm'
